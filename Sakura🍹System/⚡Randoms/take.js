`|üçπ|======================================================================================================‚¨°  ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõ‚Ñ¢`;
`|üçπ|      (ùêú)ùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠ | ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!       |`;
`|üçπ|======================================================================================================‚¨°  ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõ‚Ñ¢`;
`|üçπ|`;
`|üçπ|`;
`|‚¨°‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê|  ‚Ñ¢ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõüçπùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠(ùêú) |‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚¨°|`;
require(`../../Sakuraüõ∞Ô∏èServer/konfs`);
const Sakura_Buttons = require(`../../Sakuraüõ∞Ô∏èServer/Sakura_Buttons`);
const Sakura_Static = require(`../../Sakuraüõ∞Ô∏èServer/Sakura_Static`);
const { MessageType, Mimetype } = require(`@adiwajshing/baileys`);
const cleanRF = require(`../../Sakuraüõ∞Ô∏èServer/cleanRF`);
const Downloader = require(`nodejs-file-downloader`);
const _ùîèùîûùîü_ = require(`../../Sakuraüõ∞Ô∏èServer/_ùîèùîûùîü_`);
const Íú∞·¥ú·¥Ñ·¥ã = require(`../../Sakuraüõ∞Ô∏èServer/oShit`);
var ·¥ã·¥á…™·¥áx = new RegExp(_ùîèùîûùîü_.FOXTROT, `g`);
const vers = require(`../../package.json`);
var ·¥ã·¥á…™ = /\/\^\[(.*)+\]\/\g/g.exec(·¥ã·¥á…™·¥áx)[1];
const ffmpeg = require(`fluent-ffmpeg`);
const fetch = require(`node-fetch`);
const fs = require(`fs`);
var path = require(`path`);
var scriptName = path.basename(__filename);
var newScpt = scriptName.slice(0, -3).toLowerCase();
`|‚¨°‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê|  ‚Ñ¢ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõüçπùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠(ùêú) |‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚¨°|`;
module.exports = {
  name: newScpt,
  async handle(”Ñ Ä«ü”Ñ…®’º ê, chat, ÷Ü«ü”Ñ ä Ä«ü, Needs, Íú±…™·¥õ Ä·¥Ä·¥ò, Clock, Ping) {
    var ’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂ = ÷Ü«ü”Ñ ä Ä«ü.sender;
    const defaultnm = ÷Ü«ü”Ñ ä Ä«ü.commandName;
    var ’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂’º ä ç = ’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂.substring(0, ’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂.length - 15);
    const FinalName = defaultnm.charAt(0).toUpperCase() + defaultnm.slice(1);
    `|‚¨°‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê|  ‚Ñ¢ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõüçπùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠(ùêú) |‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚¨°|`;
    const hold = require("../../Sakuraüõ∞Ô∏èServer/Hold");
    hold.Hold(÷Ü«ü”Ñ ä Ä«ü);
    `|‚¨°‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê|  ‚Ñ¢ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõüçπùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠(ùêú) |‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚¨°|`;
    if (÷Ü«ü”Ñ ä Ä«ü.isReply) {
      var Receiver = chat.message.extendedTextMessage.contextInfo.participant;
      var ÷Ñ…õ Ä÷Ü÷Ö’º…¢÷Ö»∂’º ä ç = Receiver.substring(0, Receiver.length - 15);
      try {
        ùïªùïªùñëùñäùñôùñäùñó = await ”Ñ Ä«ü”Ñ…®’º ê.getProfilePicture(Receiver);
      } catch {
        ùïªùïªùñëùñäùñôùñäùñó = "https://i.postimg.cc/gcw6vq3X/Npp.png";
      }
      let Triggered = global.API(
        "https://some-random-api.ml",
        "/canvas/triggered",
        {
          avatar: ùïªùïªùñëùñäùñôùñäùñó,
        }
      );
      var File = Date.now() + ".gif";
      var FileDone = Date.now() + "_.mp4";
      const downloader = await new Downloader({
        url: Triggered,
        directory: `./`,
        fileName: File,
        cloneFiles: false,
      });
      try {
        await downloader.download();
        ffmpeg(File)
          .outputOptions([
            `-pix_fmt yuv420p`,
            `-c:v libx264`,
            `-movflags +faststart`,
            `-filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2'`,
          ])
          .save(FileDone)
          .on(`end`, async () => {
            await ”Ñ Ä«ü”Ñ…®’º ê
              .sendMessage(
                ÷Ü«ü”Ñ ä Ä«ü.chatId,
                { url: FileDone },
                MessageType.video,
                {
                  mimetype: `video/gif`,
                  quoted: chat,
                  caption: `‚éø(ùêú)ùêíùêöùê§ùêÆùê´ùêöùêÑùêßùê†ùê¢ùêßùêû: kryozen${vers.vers}‚èã\n‚éø‚óàùêÉùêöùê≠ùêû: ${Clock}‚èã\n‚éø‚óàùêèùê¢ùêßùê†: ${Ping}ms‚èã
                  

‚ïî‚ïê‚ïê‚ïê‚ïê‚óáüî±ùêÇùê®ùê¶ùê¶ùêöùêßùêù: _${·¥ã·¥á…™}${FinalName}_
‚ïëüçï ùêÖùê´ùê®ùê¶: @${’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂’º ä ç}
‚ïëüå≠ ùêìùê®: @${÷Ñ…õ Ä÷Ü÷Ö’º…¢÷Ö»∂’º ä ç}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`,
                  contextInfo: { mentionedJid: [’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂, Receiver] },
                }
              )
              .catch((Error) => Íú∞·¥ú·¥Ñ·¥ã.catch(Error, ”Ñ Ä«ü”Ñ…®’º ê, ÷Ü«ü”Ñ ä Ä«ü, chat));
            await cleanRF.cleanRF(File, FileDone);
          });
      } catch (Error) {
        Íú∞·¥ú·¥Ñ·¥ã.catch(Error, ”Ñ Ä«ü”Ñ…®’º ê, ÷Ü«ü”Ñ ä Ä«ü, chat);
        return;
      }
      `|‚¨°‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê|  ‚Ñ¢ùêäùê´ùêöùê§ùê¢ùêßùê≥ùêãùêöùêõüçπùêíùêöùê§ùêÆùê´ùêöùêÅùê®ùê≠(ùêú) |‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚¨°|`;
    } else {
      try {
        ùïªùïªùñëùñäùñôùñäùñó = await ”Ñ Ä«ü”Ñ…®’º ê.getProfilePicture(’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂);
      } catch {
        ùïªùïªùñëùñäùñôùñäùñó = "https://i.postimg.cc/gcw6vq3X/Npp.png";
      }
      let Triggered = global.API(
        "https://some-random-api.ml",
        "/canvas/triggered",
        {
          avatar: ùïªùïªùñëùñäùñôùñäùñó,
        }
      );
      var File = Date.now() + ".gif";
      var FileDone = Date.now() + "_.mp4";
      const downloader = await new Downloader({
        url: Triggered,
        directory: `./`,
        fileName: File,
        cloneFiles: false,
      });
      try {
        await downloader.download();
        ffmpeg(File)
          .outputOptions([
            `-pix_fmt yuv420p`,
            `-c:v libx264`,
            `-movflags +faststart`,
            `-filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2'`,
          ])
          .save(FileDone)
          .on(`end`, async () => {
            await ”Ñ Ä«ü”Ñ…®’º ê
              .sendMessage(
                ÷Ü«ü”Ñ ä Ä«ü.chatId,
                { url: FileDone },
                MessageType.video,
                {
                  mimetype: `video/gif`,
                  quoted: chat,
                  caption: `‚éø(ùêú)ùêíùêöùê§ùêÆùê´ùêöùêÑùêßùê†ùê¢ùêßùêû: kryozen${vers.vers}‚èã\n‚éø‚óàùêÉùêöùê≠ùêû: ${Clock}‚èã\n‚éø‚óàùêèùê¢ùêßùê†: ${Ping}ms‚èã


‚ïî‚ïê‚ïê‚ïê‚ïê‚óáüî±ùêÇùê®ùê¶ùê¶ùêöùêßùêù: _${·¥ã·¥á…™}${FinalName}_
‚ïëüçï ùêÖùê´ùê®ùê¶: @${’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂’º ä ç}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`,
                  contextInfo: { mentionedJid: [’°…¶÷Ö÷Ü…õ’º»∂…¶«ü»∂] },
                }
              )
              .catch((Error) => Íú∞·¥ú·¥Ñ·¥ã.catch(Error, ”Ñ Ä«ü”Ñ…®’º ê, ÷Ü«ü”Ñ ä Ä«ü, chat));
            await cleanRF.cleanRF(File, FileDone);
          });
      } catch (Error) {
        Íú∞·¥ú·¥Ñ·¥ã.catch(Error, ”Ñ Ä«ü”Ñ…®’º ê, ÷Ü«ü”Ñ ä Ä«ü, chat);
        return;
      }
    }
  },
};
