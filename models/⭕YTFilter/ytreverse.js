//  ‚ïî‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ WhatsBot by magneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
//  ‚ïë‚ßâ‡ºª ü§ñùêñùê°ùêöùê≠ùê¨ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢-ùêÉùêûùêØùê¢ùêúùêûü§ñ
//  ‚ïë  ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüêùüéùüé++ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïëüåü A versatile WhatsApp multi-purpose bot designed for group management and user convenience.
//  ‚ïëüöÄ Simplifies group management tasks and enhances the overall user experience.
//  ‚ïë‚ö†Ô∏è Please note: Engaging in spamming activities may lead to account suspension. Use responsibly!
//  ‚ïëüéâ WhatsBot is intended for fun and convenience, but we're not responsible for account bans.
//  ‚ïëüîÄ forking the repository is allowed, but customized versions or modified plugins are unsupported.
//  ‚ïë‚ö†Ô∏è Exercise caution and take responsibility for any modifications made to the bot.
//  ‚ïëüìû Need assistance or have issues? Contact our developers at +918436686758 and +918250889325.
//  ‚ïëüîÑ We'll continue providing updates and support for the original version of the bot.
//  ‚ïëüëâ Enjoy the features and functionality of WhatsBot responsibly! Make the most out of your
//  ‚ïë   WhatsApp group management experience! üéâ
//  ‚ïë
//  ‚ïëüêû Developers: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ WhatsBot by magneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
require("../../logs/global.js");
var path = require("path");
var fileName = path.basename(__filename);
var functionName = fileName.slice(0, -3).toLowerCase();

module.exports = async (WhatsBot, voxchat, update, store) => {
  try {
    var query = WhatsBot.args.join(" ");
    if (
      !query ||
      (query.includes("youtube") && !WhatsBot.TubeRegex.test(query))
    ) {
      await WhatsBot.sendMessage(voxchat.chat, {
        react: { text: "‚ùå", key: voxchat.key },
      });
      return voxchat.reply(
        `*üò• Apologies:* ${WhatsBot.pushname || WhatsBot.Tname}
*‚ùå Error* 
> _No query provided!_

*‚ö° Usage* 
> _${WhatsBot.prefix}${functionName} song/link_`
      );
    }
    var response = await WhatsBot.magfetch(
      WhatsBot,
      `https://magneum.vercel.app/api/youtube_sr?q=${query}`
    );
    console.log(response.response);
    var searchData = response.data.youtube_search[0];
    var musicResponse = await WhatsBot.magfetch(
      WhatsBot,
      `https://magneum.vercel.app/api/youtube_dl?q=${searchData.TITLE}&quality=music`
    );
    var musicData = musicResponse.data[0];
    var audioFilename = `${WhatsBot.between(3000, 4000)}${musicData.YT_Id}.mp3`;
    await WhatsBot.exec(
      `${WhatsBot.pathFFmpeg} -i ${musicData.quick_dl} -af 'bass=g=10,dynaudnorm=f=150' ${audioFilename}`
    );
    var audioFile = WhatsBot.fs.readFileSync(`./${audioFilename}`);
    var thumbnail = await WhatsBot.getBuffer(searchData.HQ_IMAGE);
    var mediaUrl = searchData.LINK || "Not available";
    var authorName = searchData.AUTHOR_NAME || "Not available";
    var description = searchData.DESCRIPTION || "No description available";
    var message = `
*üîñ Here's the information for ${functionName} requested by ${
      WhatsBot.pushname || WhatsBot.Tname
    }:*
*üéµ Title:* ${searchData.TITLE}
*üëÅÔ∏è Views:* ${searchData.VIEWS}  
*‚è±Ô∏è Duration:* ${searchData.DURATION_FULL}
*üîó Link:* ${mediaUrl}
*‚úçÔ∏è Author:* ${authorName}

*üìú Description:*
${description}`;
    await WhatsBot.sendMessage(voxchat.chat, {
      text: message,
      options: {
        contextInfo: {
          externalAdReply: {
            title: searchData.TITLE,
            body: "This result is powered by magneum's YT-Filter.",
            renderLargerThumbnail: true,
            thumbnailUrl: searchData.HQ_IMAGE,
            mediaUrl,
            mediaType: 1,
            thumbnail,
            sourceUrl: "https://bit.ly/magneum",
          },
        },
      },
    });
    await WhatsBot.sendMessage(voxchat.chat, {
      audio: audioFile,
      mimetype: "audio/mpeg",
      fileName: `${searchData.TITLE}.mp3`,
      headerType: 4,
      contextInfo: {
        externalAdReply: {
          title: searchData.TITLE,
          body: "This result is powered by magneum's YT-Filter.",
          renderLargerThumbnail: true,
          thumbnailUrl: searchData.HQ_IMAGE,
          mediaUrl,
          mediaType: 1,
          thumbnail,
          sourceUrl: "https://bit.ly/magneum",
        },
      },
    });
    WhatsBot.fs.unlinkSync(`./${audioFilename}`);
  } catch (error) {
    return WhatsBot.handlerror(WhatsBot, voxchat, error);
  }
};
