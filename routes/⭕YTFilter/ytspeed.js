("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ —ï—ÉŒ∑—Ç–ΩiŒ± –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// ‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
// ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
// ‚ïë
// ‚ïë We won't be responsible for any kind of ban due to this bot.
// ‚ïë —ï—ÉŒ∑—Ç–ΩiŒ± was made for fun purpose and to make group management easier.
// ‚ïë It's your concern if you spam and gets your account banned.
// ‚ïë Also, Forks won't be entertained.
// ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
// ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
// ‚ïë In short, Fork At Your Own Risk.
// ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ —ï—ÉŒ∑—Ç–ΩiŒ± –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (—ï—ÉŒ∑—Ç–ΩiŒ±, vc–Ωa—Ç, update, store) => {
  try {
    if (!—ï—ÉŒ∑—Ç–ΩiŒ±.args.join(" ")) {
      await —ï—ÉŒ∑—Ç–ΩiŒ±.sendMessage(vc–Ωa—Ç.chat, {
        react: {
          text: "‚ùå",
          key: vc–Ωa—Ç.key,
        },
      });
      return vc–Ωa—Ç.reply(
        `*üò•Sorry:* _${—ï—ÉŒ∑—Ç–ΩiŒ±.pushname || —ï—ÉŒ∑—Ç–ΩiŒ±.Tname}_
*‚ùåError* 
> _No query provided!_

*‚ö°Usage*   
> _${—ï—ÉŒ∑—Ç–ΩiŒ±.prefix}${pfname} song/link_`
      );
    }

    var gotArgument = —ï—ÉŒ∑—Ç–ΩiŒ±.args.join(" ");
    if (gotArgument.includes("yout")) {
      if (!—ï—ÉŒ∑—Ç–ΩiŒ±.TubeRegex.test(gotArgument)) {
        await —ï—ÉŒ∑—Ç–ΩiŒ±.sendMessage(vc–Ωa—Ç.chat, {
          react: {
            text: "‚ùå",
            key: vc–Ωa—Ç.key,
          },
        });
        return vc–Ωa—Ç.reply(
          `*üò•Sorry:* _${—ï—ÉŒ∑—Ç–ΩiŒ±.pushname || —ï—ÉŒ∑—Ç–ΩiŒ±.Tname}_
*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${—ï—ÉŒ∑—Ç–ΩiŒ±.prefix}${pfname} song/link_`
        );
      }
    }

    —ï—ÉŒ∑—Ç–ΩiŒ±
      .magfetch(
        —ï—ÉŒ∑—Ç–ΩiŒ±,
        "https://magneum.vercel.app/api/youtube_sr?q=" + —ï—ÉŒ∑—Ç–ΩiŒ±.args.join(" ")
      )
      .then(async (response) => {
        var mData = response.data;
        console.log(mData);
        await —ï—ÉŒ∑—Ç–ΩiŒ±.imgB(
          —ï—ÉŒ∑—Ç–ΩiŒ±,
          ŒΩ‚Ñì–∫hat,
          `*üîñHere, ${pfname} For ${—ï—ÉŒ∑—Ç–ΩiŒ±.pushname}:*
*üçªTitle:* ${mData.youtube_search[0].TITLE}
*üôàViews:* ${mData.youtube_search[0].VIEWS}  
*‚è∞Duration:* ${mData.youtube_search[0].DURATION_FULL}
*üîóLink:* ${mData.youtube_search[0].LINK || "null"}
*üñäÔ∏èAuthor:* ${mData.youtube_search[0].AUTHOR_NAME || "null"}

*üìúDescription:* ${mData.youtube_search[0].DESCRIPTION}`,
          mData.youtube_search[0].HQ_IMAGE
        );

        —ï—ÉŒ∑—Ç–ΩiŒ±
          .magfetch(
            —ï—ÉŒ∑—Ç–ΩiŒ±,
            "https://magneum.vercel.app/api/youtube_dl?q=" +
              mData.youtube_search[0].TITLE +
              "&quality=music"
          )
          .then(async (response) => {
            var musicData = response.data;
            console.log(musicData);
            let audioConv =
              —ï—ÉŒ∑—Ç–ΩiŒ±.between(3000, 4000) + musicData[0].YT_ID + ".mp3";
            —ï—ÉŒ∑—Ç–ΩiŒ±.exec(
              `${—ï—ÉŒ∑—Ç–ΩiŒ±.pathFFmpeg} -i ${musicData[0].quick_dl} -af 'atempo=2' ${audioConv}`,
              async (error) => {
                if (error) return —ï—ÉŒ∑—Ç–ΩiŒ±.grab(—ï—ÉŒ∑—Ç–ΩiŒ±, vc–Ωa—Ç, error);
                else
                  await —ï—ÉŒ∑—Ç–ΩiŒ±.sendMessage(
                    vc–Ωa—Ç.chat,
                    {
                      audio: —ï—ÉŒ∑—Ç–ΩiŒ±.fs.readFileSync(`./${audioConv}`),
                      mimetype: "audio/mpeg",
                      fileName: mData.youtube_search[0].TITLE + ".mp3",
                      headerType: 4,
                      contextInfo: {
                        externalAdReply: {
                          title: mData.youtube_search[0].title,
                          body: "YT-Filter‚≠ïMade by magneum.",
                          renderLargerThumbnail: true,
                          thumbnailUrl: mData.youtube_search[0].thumbnail,
                          mediaUrl: mData.youtube_search[0].url,
                          mediaType: 1,
                          thumbnail: await —ï—ÉŒ∑—Ç–ΩiŒ±.getBuffer(
                            mData.youtube_search[0].thumbnail
                          ),
                          sourceUrl: "https://bit.ly/magneum",
                        },
                      },
                    },
                    { quoted: vc–Ωa—Ç }
                  );
                return await —ï—ÉŒ∑—Ç–ΩiŒ±.fs.unlinkSync(`./${audioConv}`);
              }
            );
          });
      });
  } catch (error) {
    return —ï—ÉŒ∑—Ç–ΩiŒ±.grab(—ï—ÉŒ∑—Ç–ΩiŒ±, vc–Ωa—Ç, error);
  }
};
