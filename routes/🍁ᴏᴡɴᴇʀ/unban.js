//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (
  V÷ÖxB‡ªêt,
  ŒΩ‚Ñì–∫hat,
  gmeta,
  isAdmin,
  groupName,
  isBotAdmin,
  groupAdmins,
  participants
) => {
  await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
    react: {
      text: "üîñ",
      key: ŒΩ‚Ñì–∫hat.key,
    },
  });
  try {
    if (!V÷ÖxB‡ªêt.frome && !V÷ÖxB‡ªêt.isSudoWorker) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùåError* 
> _Owner Only Command!_`
      );
    }

    if (V÷ÖxB‡ªêt.mentionByReply) {
      let repliedPerson =
        V÷ÖxB‡ªêt.mtype == "extendedTextMessage" &&
        V÷ÖxB‡ªêt.message.extendedTextMessage.contextInfo != null
          ? V÷ÖxB‡ªêt.message.extendedTextMessage.contextInfo.participant || ""
          : "";
      let repliedPersonNum = repliedPerson.substring(
        0,
        repliedPerson.length - 15
      );
      V÷ÖxB‡ªêt.userBanCheck.findOne(
        {
          ID: repliedPerson,
        },
        async (error, userBan) => {
          if (error) return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
          if (!userBan) {
            return ŒΩ‚Ñì–∫hat.reply(
              `*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* @${repliedPersonNum} is already un-banned!`
            );
          } else {
            userBan.delete();
            return ŒΩ‚Ñì–∫hat.reply(
              `*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* @${repliedPersonNum} has been un-banned!`
            );
          }
        }
      );
    } else if (V÷ÖxB‡ªêt.args[0] && V÷ÖxB‡ªêt.args[0].startsWith("@")) {
      let mention = V÷ÖxB‡ªêt.mentionByTag;
      let ùïªùñäùñóùñòùñîùñì = (await mention[0]) || V÷ÖxB‡ªêt.msg.contextInfo.participant;
      V÷ÖxB‡ªêt.userBanCheck.findOne(
        {
          ID: ùïªùñäùñóùñòùñîùñì,
        },
        async (error, userBan) => {
          if (error) return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
          if (!userBan) {
            return ŒΩ‚Ñì–∫hat.reply(
              `*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* @${mention} is already un-banned!`
            );
          } else {
            userBan.delete();
            return ŒΩ‚Ñì–∫hat.reply(`*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* @${mention} has been un-banned!`);
          }
        }
      );
    } else if (
      !V÷ÖxB‡ªêt.mentionByReply &&
      !V÷ÖxB‡ªêt.args[0] &&
      !V÷ÖxB‡ªêt.args[0].startsWith("@")
    ) {
      V÷ÖxB‡ªêt.userBanCheck.findOne(
        {
          ID: ŒΩ‚Ñì–∫hat.chat,
        },
        async (error, userBan) => {
          if (error) return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
          if (!userBan) {
            return ŒΩ‚Ñì–∫hat.reply(
              `*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* ${groupName}\nGroup is already un-banned!`
            );
          } else {
            userBan.delete();
            return ŒΩ‚Ñì–∫hat.reply(
              `*üîíùêíùê≠ùêöùê≠ùêÆùê¨:* ${groupName}\nGroup Has Been un-banned!`
            );
          }
        }
      );
    } else {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùåError* 
> _Could not find any context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to person to ban_
> _${V÷ÖxB‡ªêt.prefix}${pfname} don't reply to anyone and group will be un-banned_`
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
  }
};
