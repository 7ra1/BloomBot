//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, update, store) => {
  try {
    V÷ÖxB‡ªêt.magfetch(
      V÷ÖxB‡ªêt,
      "https://magneum.vercel.app/api/emotions?q=" + pfname
    ).then(async (response) => {
      var mData = response.data;
      console.log(mData);
      if (!mData.meta.url) {
        await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
          react: {
            text: "‚ùå",
            key: ·¥†·¥èx·¥Ñ.key,
          },
        });
        return ·¥†·¥èx·¥Ñ.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùå Error* 
> There has been an API Error. Please try again later.`
        );
      }
      resp = mData.resp.id + ".mp4";
      V÷ÖxB‡ªêt.ffmpeg
        .input(mData.meta.url)
        .outputOptions([
          "-pix_fmt yuv420p",
          "-c:v libx264",
          "-movflags +faststart",
          "-filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2'",
        ])
        .output(resp)
        .on("end", async () => {
          if (V÷ÖxB‡ªêt.args[0] && V÷ÖxB‡ªêt.args[0].startsWith("@")) {
            let mention = V÷ÖxB‡ªêt.mentionByTag;
            let dataFor =
              (await mention[0]) || ·¥†·¥èx·¥Ñ.msg.contextInfo.participant;
            return await V÷ÖxB‡ªêt.sendMessage(
              ·¥†·¥èx·¥Ñ.chat,
              {
                gifPlayback: true,
                video: V÷ÖxB‡ªêt.fs.readFileSync(resp),
                caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*üéãFeeling:* ${pfname}
*üì¢From:* ${V÷ÖxB‡ªêt.pushname}
*‚ö°For:* @${dataFor.split("@")[0] || ""}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
                mentions: [dataFor, ·¥†·¥èx·¥Ñ.sender],
              },
              { quoted: ·¥†·¥èx·¥Ñ }
            ).then(V÷ÖxB‡ªêt.fs.unlinkSync(resp));
          } else if (V÷ÖxB‡ªêt.mentionByReply) {
            let dataFor =
              ·¥†·¥èx·¥Ñ.mtype == "extendedTextMessage" &&
              ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo != null
                ? ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo.participant ||
                  ""
                : "";
            return await V÷ÖxB‡ªêt.sendMessage(
              ·¥†·¥èx·¥Ñ.chat,
              {
                gifPlayback: true,
                video: V÷ÖxB‡ªêt.fs.readFileSync(resp),
                caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*üéãFeeling:* ${pfname}
*üì¢From:* ${V÷ÖxB‡ªêt.pushname}
*‚ö°For:* @${dataFor.split("@")[0] || ""}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
                mentions: [dataFor, ·¥†·¥èx·¥Ñ.sender],
              },
              { quoted: ·¥†·¥èx·¥Ñ }
            ).then(V÷ÖxB‡ªêt.fs.unlinkSync(resp));
          } else {
            return await V÷ÖxB‡ªêt.sendMessage(
              ·¥†·¥èx·¥Ñ.chat,
              {
                gifPlayback: true,
                video: V÷ÖxB‡ªêt.fs.readFileSync(resp),
                caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*‚ö°For:* ${V÷ÖxB‡ªêt.pushname}
*üéãFeeling:* ${pfname}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
              },
              { quoted: ·¥†·¥èx·¥Ñ }
            ).then(V÷ÖxB‡ªêt.fs.unlinkSync(resp));
          }
        })
        .on("error", (error) => console.log(error))
        .run();
    });
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
  }
};
