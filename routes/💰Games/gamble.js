//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, update, store) => {
  try {
    let FormatColor = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
    let FormatAmount = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?rpb]+/;
    if (!V÷ÖxB‡ªêt.args[0] && !V÷ÖxB‡ªêt.args[1]) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
      );
    }

    if (FormatColor.test(V÷ÖxB‡ªêt.args[0])) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
      );
    }

    if (FormatAmount.test(V÷ÖxB‡ªêt.args[1])) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
      );
    }

    if (
      !V÷ÖxB‡ªêt.args[0].includes("red") &&
      !V÷ÖxB‡ªêt.args[0].includes("black") &&
      !V÷ÖxB‡ªêt.args[0].includes("purple")
    ) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
      );
    }

    let ColorRoom = V÷ÖxB‡ªêt.args[0];
    let AmountRoom = parseInt(V÷ÖxB‡ªêt.args[1]);
    if (AmountRoom < 50) {
      return await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ŒΩ‚Ñì–∫hat,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _Money Amount!_
üí°ùóüùó∂ùó∫ùó∂ùòÅ: _min 50gold needed to gamble_`,
        "./src/voxbot.jpg"
      );
    }

    if (AmountRoom > 800) {
      return await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ŒΩ‚Ñì–∫hat,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _Money Amount!_
üí°ùóüùó∂ùó∫ùó∂ùòÅ: _max 800gold for gamble_`,
        "./src/voxbot.jpg"
      );
    }

    if (ColorRoom === "red" && AmountRoom > 200) {
      return await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ŒΩ‚Ñì–∫hat,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _Money For Red!_
üí°ùóüùó∂ùó∫ùó∂ùòÅ: _max 200gold_`,
        "./src/voxbot.jpg"
      );
    }

    if (ColorRoom === "black" && AmountRoom > 500) {
      return await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ŒΩ‚Ñì–∫hat,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _Money For Black!_
‚ö´ùóüùó∂ùó∫ùó∂ùòÅ: _max 500gold_`,
        "./src/voxbot.jpg"
      );
    }

    if (ColorRoom === "purple" && AmountRoom > 800) {
      return await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ŒΩ‚Ñì–∫hat,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _Money For Purple!_
üü£ùóüùó∂ùó∫ùó∂ùòÅ: _max 800gold_`,
        "./src/voxbot.jpg"
      );
    }

    V÷ÖxB‡ªêt.Economy.findOne(
      {
        ID: ŒΩ‚Ñì–∫hat.sender,
      },
      async (error, userEco) => {
        if (error) {
          return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
        }

        if (!userEco) {
          let newUser = new V÷ÖxB‡ªêt.Economy({
            ID: ŒΩ‚Ñì–∫hat.sender,
            money: 0,
            daily: 0,
            timeout: 86400000,
            fishdone: 0,
            fishtimeout: 1800000,
            workdone: 0,
            worktimeout: 900000,
          });
          await newUser.save().catch((error) => {
            return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
          });
          return await V÷ÖxB‡ªêt.imgB(
            V÷ÖxB‡ªêt,
            ŒΩ‚Ñì–∫hat,
            `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
*üí∞Balance:* Just Opened Your Account!`,
            "./src/voxbot.jpg"
          );
        }

        V÷ÖxB‡ªêt.Gamble.findOne(
          {
            ID: ŒΩ‚Ñì–∫hat.sender,
          },
          async (error, userGamble) => {
            if (error) {
              return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
            }

            if (!userGamble) {
              let newUser = new V÷ÖxB‡ªêt.Gamble({
                ID: ŒΩ‚Ñì–∫hat.sender,
                serverID: ŒΩ‚Ñì–∫hat.chat,
                Gambledone: 0,
                Gambletimeout: 480000,
              });
              await newUser.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
*üßàStatus:* Added To DB!
ü¶ãTry Again!`,
                "./src/voxbot.jpg"
              );
            }

            if (
              userGamble.Gambletimeout - (Date.now() - userGamble.Gambledone) >
              0
            ) {
              let time = V÷ÖxB‡ªêt.ms(
                userGamble.Gambletimeout - (Date.now() - userGamble.Gambledone)
              );
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ùåùóòùóøùóøùóºùóø: _You've Recently Gambled!_
üïêùóöùóÆùó∫ùóØùóπùó≤ ùóîùó¥ùóÆùó∂ùóª: ${time.minutes}m ${time.seconds}s`,
                "./src/voxbot.jpg"
              );
            }

            function isOdd(num) {
              if (num % 2 == 0) return false;
              else if (num % 2 == 1) return true;
              else if (num % 3 == 0) return false;
              else if (num % 4 == 1) return true;
              else return false;
            }
            let Color = ColorRoom;
            let money = parseInt(AmountRoom);
            let CurrentMoney = userEco.money;
            let Amount = Math.floor(Math.random() * 10);

            if (!Color) {
              await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
                react: {
                  text: "‚ùå",
                  key: ŒΩ‚Ñì–∫hat.key,
                },
              });
              return ŒΩ‚Ñì–∫hat.reply(
                `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Argument Needed!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} _color money_
üåøùêìùê®ùê©ùê¢ùêú: Gambleü§ëAI
(medium) *Red:* _even out of 10_ 
(hard) *Black:* _2 out of 10_ 
(god) *Purple:* _1 out of 10_`
              );
            }

            Color = Color.toLowerCase();
            if (!money) {
              await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
                react: {
                  text: "‚ùå",
                  key: ŒΩ‚Ñì–∫hat.key,
                },
              });
              return ŒΩ‚Ñì–∫hat.reply(
                `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
              );
            }

            if (money > CurrentMoney) {
              await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
                react: {
                  text: "‚ùå",
                  key: ŒΩ‚Ñì–∫hat.key,
                },
              });
              return ŒΩ‚Ñì–∫hat.reply(
                `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
              );
            }

            if (Color.includes("black")) {
              Color = 0;
            } else if (Color.includes("red")) {
              Color = 1;
            } else if (Color.includes("purple")) {
              Color = 2;
            } else {
              await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
                react: {
                  text: "‚ùå",
                  key: ŒΩ‚Ñì–∫hat.key,
                },
              });
              return ŒΩ‚Ñì–∫hat.reply(
                `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} color money_

*(medium) Red:* _even out of 10_ 
*(hard) Black:* _2 out of 10_ 
*(god) Purple:* _1 out of 10_`
              );
            }

            if (Amount == 1 && Color == 2) {
              money *= 15;
              userEco.money = userEco.money + money;
              userGamble.Gambledone = Date.now();
              await userGamble.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              await userEco.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
üü£ùóòùóÆùóøùóªùó≤ùó±: You won *${money}* gold.
‚≠êùó†ùòÇùóπùòÅùó∂ùóΩùóπùó∂ùó≤ùóø: _15x_`,
                "./src/voxbot.jpg"
              );
            }

            if (!isOdd(Amount) && Color == 1) {
              money = parseInt(money * 1.5);
              userEco.money = userEco.money + money;
              userGamble.Gambledone = Date.now();
              await userGamble.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              await userEco.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
üî¥ùóòùóÆùóøùóªùó≤ùó±: _won *${money}* gold!_
‚≠êùó†ùòÇùóπùòÅùó∂ùóΩùóπùó∂ùó≤ùóø: _1.5x_`,
                "./src/voxbot.jpg"
              );
            }

            if (isOdd(Amount) && Color == 0) {
              money = parseInt(money * 2);
              userEco.money = userEco.money + money;
              userGamble.Gambledone = Date.now();
              await userGamble.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              await userEco.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
              });
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
‚ö´ùóòùóÆùóøùóªùó≤ùó±: _won *${money}* gold!_
‚≠êùó†ùòÇùóπùòÅùó∂ùóΩùóπùó∂ùó≤ùóø: _2x_`,
                "./src/voxbot.jpg"
              );
            }

            userEco.money = userEco.money - money;
            userGamble.Gambledone = Date.now();
            await userGamble.save().catch((error) => {
              return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
            });
            await userEco.save().catch((error) => {
              return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
            });
            return await V÷ÖxB‡ªêt.imgB(
              V÷ÖxB‡ªêt,
              ŒΩ‚Ñì–∫hat,
              `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*
üíÄùó•ùó≤ùòÄùòÇùóπùòÅ: _lost *${money}* gold!_
‚≠êùó†ùòÇùóπùòÅùó∂ùóΩùóπùó∂ùó≤ùóø: _0x_`,
              "./src/voxbot.jpg"
            );
          }
        );
      }
    );
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
  }
};
