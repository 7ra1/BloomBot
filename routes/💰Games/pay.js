//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, update, store) => {
  if (!V÷ÖxB‡ªêt.mentionByReply) {
    return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
  }
  if (V÷ÖxB‡ªêt.args.length === 0) {
    return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
  }
  if (/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/.test(V÷ÖxB‡ªêt.args[0])) {
    return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
  }
  if (V÷ÖxB‡ªêt.args[0].match(/[a-z]/i)) {
    return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
  }

  if (V÷ÖxB‡ªêt.mentionByReply) {
    receiver =
      V÷ÖxB‡ªêt.mtype == "extendedTextMessage" &&
      V÷ÖxB‡ªêt.message.extendedTextMessage.contextInfo != null
        ? V÷ÖxB‡ªêt.message.extendedTextMessage.contextInfo.participant || ""
        : "";
    receiverName = await V÷ÖxB‡ªêt.getName(receiver);
    if (receiver === ·¥†·¥èx·¥Ñ.sender) {
      return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _Can't pay self account!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
    }

    await V÷ÖxB‡ªêt.Economy.findOne(
      {
        ID: ·¥†·¥èx·¥Ñ.sender,
      },
      async (error, uPayer) => {
        if (error) return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
        if (!uPayer) {
          new V÷ÖxB‡ªêt.Economy({
            ID: ·¥†·¥èx·¥Ñ.sender,
            money: 0,
            daily: 0,
            timeout: 86400000,
            fishdone: 0,
            fishtimeout: 1800000,
            workdone: 0,
            worktimeout: 900000,
          })
            .save()
            .catch((error) => {
              return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
            });
          return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _You Have 0-gold To Pay_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
        }

        if (parseInt(V÷ÖxB‡ªêt.args[0]) > uPayer.money) {
          return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _You Have 0-gold To Pay_

*üí∞Balance:*
>${uPayer.money}

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
        } else {
          await V÷ÖxB‡ªêt.Economy.findOne(
            {
              ID: receiver,
            },
            async (error, uBonus) => {
              if (error) return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
              if (!uBonus) {
                new V÷ÖxB‡ªêt.Economy({
                  ID: receiver,
                  money: parseInt(V÷ÖxB‡ªêt.args[0]),
                  daily: 0,
                  timeout: 86400000,
                  fishdone: 0,
                  fishtimeout: 1800000,
                  workdone: 0,
                  worktimeout: 900000,
                })
                  .save()
                  .catch((error) => {
                    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
                  });
                uPayer.money = uPayer.money - parseInt(V÷ÖxB‡ªêt.args[0]);
                uPayer.save().catch((error) => {
                  return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
                });
                return await V÷ÖxB‡ªêt.imgB(
                  V÷ÖxB‡ªêt,
                  ·¥†·¥èx·¥Ñ,
                  `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*

‚îå„Äé *üì•Paying Account* „Äè
‚îÇ‚ïë‚¶Å *üí∞Balance:* ${uPayer.money}
‚îÇ‚ïë‚¶Å *ü¶öAccount Holder:* ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}
‚îï‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ãë

‚îå„Äé *üì•Receiver Account* „Äè
‚îÇ‚ïë‚¶Å *üí∞Balance:* ${payGold}
‚îÇ‚ïë‚¶Å *üêøÔ∏èAccount To Pay:* @${receiverName}
‚îï‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ãë`,
                  "./src/voxbot.jpg"
                );
              }

              uPayer.money = uPayer.money - parseInt(V÷ÖxB‡ªêt.args[0]);
              uPayer.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
              });
              uBonus.money = uBonus.money + parseInt(V÷ÖxB‡ªêt.args[0]);
              uBonus.save().catch((error) => {
                return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
              });
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ·¥†·¥èx·¥Ñ,
                `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*

‚îå„Äé *üì•Paying Account* „Äè
‚îÇ‚ïë‚¶Å *üí∞Balance:* ${uPayer.money}
‚îÇ‚ïë‚¶Å *ü¶öAccount Holder:* ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}
‚îï‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ãë

‚îå„Äé *üì•Receiver Account* „Äè
‚îÇ‚ïë‚¶Å *üí∞Balance:* ${uBonus.money}
‚îÇ‚ïë‚¶Å *üêøÔ∏èAccount To Pay:* @${receiverName}
‚îï‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ãë`,
                "./src/voxbot.jpg"
              );
            }
          );
        }
      }
    );
  } else {
    return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_ 

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> Reply-Person: _${V÷ÖxB‡ªêt.prefix}${pfname} amount_`);
  }
};
