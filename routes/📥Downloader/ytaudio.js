//  ‚ïî‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
//  ‚ïë‚ßâ‡ºª ü§ñ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏è ùêåùêÆùê•ùê≠ùê¢ ùêÉùêûùêØùê¢ùêúùêû ü§ñ
//  ‚ïë  ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïëüåü A versatile WhatsApp multi-purpose bot designed for group management and user convenience.
//  ‚ïëüöÄ Simplifies group management tasks and enhances the overall user experience.
//  ‚ïë‚ö†Ô∏è Please note: Engaging in spamming activities may lead to account suspension. Use responsibly!
//  ‚ïëüéâ VoxBot is intended for fun and convenience, but we're not responsible for account bans.
//  ‚ïëüîÄ Forking the repository is allowed, but customized versions or modified plugins are unsupported.
//  ‚ïë‚ö†Ô∏è Exercise caution and take responsibility for any modifications made to the bot.
//  ‚ïëüìû Need assistance or have issues? Contact our developers at +918436686758 and +918250889325.
//  ‚ïëüîÑ We'll continue providing updates and support for the original version of the bot.
//  ‚ïëüëâ Enjoy the features and functionality of VoxBot responsibly! Make the most out of your
//  ‚ïë   WhatsApp group management experience! üéâ
//  ‚ïë
//  ‚ïëüêû DEVELOPERS: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
require("../../logger/global.js");
const ppath = require("path");
const ytdl = require("ytdl-secktor");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, update, store) => {
  try {
    if (!Í™ú·¥èx ô·¥è·¥õ.args) {
      await Í™ú·¥èx ô·¥è·¥õ.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname || Í™ú·¥èx ô·¥è·¥õ.Tname}_

*‚ùåError* 
> _No query provided!_

*‚ö°Usage* 
> _${Í™ú·¥èx ô·¥è·¥õ.prefix}${pfname} song-name_`
      );
    }
    Í™ú·¥èx ô·¥è·¥õ
      .magfetch(
        Í™ú·¥èx ô·¥è·¥õ,
        "https://magneum.vercel.app/api/youtube_sr?q=" + Í™ú·¥èx ô·¥è·¥õ.args.join(" ")
      )
      .then(async (response) => {
        var mData = response.data;
        console.log(mData);

        return await Í™ú·¥èx ô·¥è·¥õ.sendMessage(
          ·¥†·¥èx·¥Ñ.chat,
          {
            image: { url: mData.youtube_search[0].HQ_IMAGE },
            caption: `*üîñHere, ${pfname} For ${Í™ú·¥èx ô·¥è·¥õ.pushname}:*
*üçªTitle:* ${mData.youtube_search[0].TITLE}
*üôàViews:* ${mData.youtube_search[0].VIEWS}
*üîóLink:* ${mData.youtube_search[0].LINK || "null"}
*‚è∞Duration:* ${mData.youtube_search[0].DURATION_FULL}
*üìúDescription:* ${mData.youtube_search[0].DESCRIPTION}`,
            footer:
              "*Synthoria‚Ñ¢ by M√•gneum*\n*üíªHomePage:* https://bit.ly/magneum",
            buttons: [
              {
                buttonId: `${Í™ú·¥èx ô·¥è·¥õ.prefix}Dashboard`,
                buttonText: { displayText: `${Í™ú·¥èx ô·¥è·¥õ.prefix}Dashboard` },
                type: 1,
              },
              {
                buttonId: `${Í™ú·¥èx ô·¥è·¥õ.prefix}Help`,
                buttonText: { displayText: `${Í™ú·¥èx ô·¥è·¥õ.prefix}Help` },
                type: 1,
              },
            ],
            headerType: 4,
            mentions: [·¥†·¥èx·¥Ñ.sender],
          },
          {
            contextInfo: { mentionedJid: [·¥†·¥èx·¥Ñ.sender] },
            quoted: ·¥†·¥èx·¥Ñ,
          }
        );

        await Í™ú·¥èx ô·¥è·¥õ.imgB(
          Í™ú·¥èx ô·¥è·¥õ,
          ·¥†·¥èx·¥Ñ,
          `*üîñHere, ${pfname} For ${Í™ú·¥èx ô·¥è·¥õ.pushname}:*
*üçªTitle:* ${mData.youtube_search[0].TITLE}
*üôàViews:* ${mData.youtube_search[0].VIEWS}
*üîóLink:* ${mData.youtube_search[0].LINK || "null"}
*‚è∞Duration:* ${mData.youtube_search[0].DURATION_FULL}
*üìúDescription:* ${mData.youtube_search[0].DESCRIPTION}`,
          mData.youtube_search[0].HQ_IMAGE
        );
        return;
        const stream = ytdl(mData.youtube_search[0].LINK, {
          filter: (info) =>
            info.audioBitrate == 160 || info.audioBitrate == 128,
        }).pipe(Í™ú·¥èx ô·¥è·¥õ.fs.createWriteStream(`./${mData.uuid}`));
        await new Promise((resolve, reject) => {
          stream.on("error", reject);
          stream.on("finish", resolve);
        });
        await Í™ú·¥èx ô·¥è·¥õ
          .sendMessage(
            ·¥†·¥èx·¥Ñ.chat,
            {
              audio: Í™ú·¥èx ô·¥è·¥õ.fs.readFileSync(`./${mData.uuid}`),
              mimetype: "audio/mpeg",
              fileName: mData.youtube_search[0].TITLE + ".mp3",
              headerType: 4,
              contextInfo: {
                externalAdReply: {
                  title: mData.youtube_search[0].TITLE,
                  body: "‚≠ïmade by voxbot",
                  renderLargerThumbnail: true,
                  thumbnailUrl: mData.youtube_search[0].THUMB,
                  mediaUrl: mData.youtube_search[0].LINK,
                  mediaType: 1,
                  thumbnail: await Í™ú·¥èx ô·¥è·¥õ.getBuffer(
                    mData.youtube_search[0].HQ_IMAGE
                  ),
                  sourceUrl: "https://bit.ly/magneum",
                },
              },
            },
            { quoted: ·¥†·¥èx·¥Ñ }
          )
          .then(Í™ú·¥èx ô·¥è·¥õ.fs.unlinkSync(`./${mData.uuid}`));
      });
  } catch (error) {
    return Í™ú·¥èx ô·¥è·¥õ.grab(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, error);
  }
};
