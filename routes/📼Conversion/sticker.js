//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, update, store) => {
  try {
    if (!V÷ÖxB‡ªêt.quoted) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Could not find any Image/Video in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to Image/Video_`
      );
    }

    if (/image/.test(V÷ÖxB‡ªêt.mime)) {
      let media = await V÷ÖxB‡ªêt.quoted.download();
      let sticker = new V÷ÖxB‡ªêt.Sticker(media, {
        pack: "m√•gneum",
        author: "–≤—É V÷ÖxB‡ªêt",
        type: V÷ÖxB‡ªêt.StickerTypes.FULL,
        categories: ["ü§©", "üéâ"],
        id: "12345",
        quality: 100,
        background: "transparent",
      });
      const buffer = await sticker.toBuffer();
      return await V÷ÖxB‡ªêt.sendMessage(
        ŒΩ‚Ñì–∫hat.chat,
        {
          sticker: buffer,
        },
        { quoted: ŒΩ‚Ñì–∫hat }
      );
    } else if (/video/.test(V÷ÖxB‡ªêt.mime)) {
      if ((V÷ÖxB‡ªêt.quoted.msg || V÷ÖxB‡ªêt.quoted).seconds > 20) {
        await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
          react: {
            text: "‚ùå",
            key: ŒΩ‚Ñì–∫hat.key,
          },
        });
        return ŒΩ‚Ñì–∫hat.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Cannot convert videos longer than 21 Seconds!_`
        );
      } else {
        let media = await V÷ÖxB‡ªêt.quoted.download();
        let sticker = new V÷ÖxB‡ªêt.Sticker(media, {
          pack: "m√•gneum",
          author: "–≤—É V÷ÖxB‡ªêt",
          type: V÷ÖxB‡ªêt.StickerTypes.FULL,
          categories: ["ü§©", "üéâ"],
          id: "12345",
          quality: 100,
          background: "transparent",
        });
        const buffer = await sticker.toBuffer();
        return await V÷ÖxB‡ªêt.sendMessage(
          ŒΩ‚Ñì–∫hat.chat,
          {
            sticker: buffer,
          },
          { quoted: ŒΩ‚Ñì–∫hat }
        );
      }
    } else {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Could not find any Image/Video in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to Image/Video_`
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
  }
};
