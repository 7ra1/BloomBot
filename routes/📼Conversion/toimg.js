//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, update, store) => {
  try {
    if (!V÷ÖxB‡ªêt.quoted) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Could not find any Image in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to Image_`
      );
    }

    if (/image/.test(V÷ÖxB‡ªêt.mime)) {
      random = Math.floor(Math.random() * 10000);
      media = await V÷ÖxB‡ªêt.downloadAndSaveMediaMessage(V÷ÖxB‡ªêt.quoted, random);
      V÷ÖxB‡ªêt.exec(
        V÷ÖxB‡ªêt.pathFFmpeg + ` -i ${media} ${random}.png`,
        async (error) => {
          if (error) {
            return V÷ÖxB‡ªêt.reply(`*üïäÔ∏èYou:* ${
              V÷ÖxB‡ªêt.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"
            }\n*üì¢ID:* ${ŒΩ‚Ñì–∫hat.chat}

*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
          }

          if (V÷ÖxB‡ªêt.fs.existsSync(random + ".png")) {
            Found = random + ".png";
          } else if (V÷ÖxB‡ªêt.fs.existsSync(random + ".jpg")) {
            Found = random + ".jpg";
          } else if (V÷ÖxB‡ªêt.fs.existsSync(random + ".jpeg")) {
            Found = random + ".jpeg";
          } else if (V÷ÖxB‡ªêt.fs.existsSync(random + ".webp")) {
            Found = random + ".webp";
          } else {
            await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
              react: {
                text: "‚ùå",
                key: ŒΩ‚Ñì–∫hat.key,
              },
            });
            return ŒΩ‚Ñì–∫hat.reply(
              `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Could not find any Image in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to Image_`
            );
          }

          return await V÷ÖxB‡ªêt.sendMessage(
            ŒΩ‚Ñì–∫hat.chat,
            {
              image: V÷ÖxB‡ªêt.fs.readFileSync(Found),
              caption: `‚ï≠‚ïî‚ïê‚ïê„Äé ùêäùê´ùê≤ùêôùê®ùêßùêû¬Æ „Äè
‚îÇ‚ïë‚¶Å *üïäÔ∏èYou:* ${V÷ÖxB‡ªêt.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"}
‚îÇ‚ïë‚¶Å *üé≠ChatId:* ${ŒΩ‚Ñì–∫hat.chat.split("@")[0]}
‚îÇ‚ïë‚¶Å *üì¢Console:* ${V÷ÖxB‡ªêt.ShowInfo.replace("http://", "")}
‚ï∞‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ãë

*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:*`,
              footer: `*VLKYRE‚Ñ¢ Bot By KRYKNZ*

_*üíªHomePage:* ${V÷ÖxB‡ªêt.ShowInfo}_
_*‚õ∫HomeLog:* ${V÷ÖxB‡ªêt.ShowLogger}_`,
              mentions: [ŒΩ‚Ñì–∫hat.sender],
              buttons: [
                {
                  buttonId: `${V÷ÖxB‡ªêt.prefix}Commands`,
                  buttonText: {
                    displayText: `${V÷ÖxB‡ªêt.prefix}‚úàÔ∏èCommands`,
                  },
                  type: 1,
                },
                {
                  buttonId: `${V÷ÖxB‡ªêt.prefix}Synthia`,
                  buttonText: { displayText: `${V÷ÖxB‡ªêt.prefix}üõ∞Ô∏èSynthia` },
                  type: 1,
                },
              ],
              headerType: 4,
            },
            {
              quoted: ŒΩ‚Ñì–∫hat,
            }
          ).then(
            V÷ÖxB‡ªêt.fs.unlinkSync(Found),
            V÷ÖxB‡ªêt.fs.unlinkSync(random + ".png")
          );
        }
      );
    } else {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Could not find any Image in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} reply to Image_`
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat, error);
  }
};
