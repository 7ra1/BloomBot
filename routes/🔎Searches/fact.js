//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, update, store) => {
  try {
    var –∫—è—É—è—îs = await V÷ÖxB‡ªêt.axios.get("https://nekos.life/api/v2/fact");
    try {
      var –∫—è—É—è—îsi = await V÷ÖxB‡ªêt.fetch(
        global.apiGet("https://wall.alphacoders.com/api2.0", "/get.php", {
          auth: "3e7756c85df54b78f934a284c11abe4e",
          method: "search",
          term: "random",
        })
      );
      var bson = await –∫—è—É—è—îsi.json();
      var bsoni =
        bson.wallpapers[Math.floor(Math.random() * bson.wallpapers.length)];
      await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ·¥†·¥èx·¥Ñ,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:* 
> ${–∫—è—É—è—îs.data.fact}`,
        bsoni.url_image
      );
    } catch {
      await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ·¥†·¥èx·¥Ñ,
        `*üîñHere, ${pfname} For ${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}:* 
> ${–∫—è—É—è—îs.data.fact}`,
        "./src/V÷ÖxB‡ªêt_beta.jpg"
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ, error);
  }
};
