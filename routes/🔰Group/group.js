//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (
  V÷ÖxB‡ªêt,
  ŒΩ‚Ñì–∫hat,
  gmeta,
  isAdmin,
  groupName,
  isBotAdmin,
  groupAdmins,
  participants
) => {
  try {
    if (!ŒΩ‚Ñì–∫hat.isGroup) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _It's a group command!_`
      );
    }
    if (!isAdmin) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _This is an Admin only Command!_`
      );
    }
    if (!isBotAdmin) {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Bot not Admin!_`
      );
    }

    try {
      ùïØùñéùñòùñïùñëùñÜùñû = await V÷ÖxB‡ªêt.profilePictureUrl(ŒΩ‚Ñì–∫hat.sender, "image");
    } catch {
      ùïØùñéùñòùñïùñëùñÜùñû = "./src/V÷ÖxB‡ªêt.jpg";
    }

    if (V÷ÖxB‡ªêt.args[0] === "open") {
      await V÷ÖxB‡ªêt.groupSettingUpdate(ŒΩ‚Ñì–∫hat.chat, "not_announcement")
        .then(
          async (res) =>
            await V÷ÖxB‡ªêt.imgB(
              V÷ÖxB‡ªêt,
              ŒΩ‚Ñì–∫hat,
              `> *Group have been Opened by: ${
                V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname
              }*`,
              ùïØùñéùñòùñïùñëùñÜùñû
            )
        )
        .catch((error) =>
          ŒΩ‚Ñì–∫hat.reply(
            `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùåError* 
> ${jsonformat(error)}`
          )
        );
    } else if (V÷ÖxB‡ªêt.args[0] === "close") {
      await V÷ÖxB‡ªêt.groupSettingUpdate(ŒΩ‚Ñì–∫hat.chat, "announcement")
        .then(
          async (res) =>
            await V÷ÖxB‡ªêt.imgB(
              V÷ÖxB‡ªêt,
              ŒΩ‚Ñì–∫hat,
              `> *Group have been Closed by: ${
                V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname
              }*`,
              ùïØùñéùñòùñïùñëùñÜùñû
            )
        )
        .catch((error) =>
          ŒΩ‚Ñì–∫hat.reply(
            `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùåError* 
> ${jsonformat(error)}`
          )
        );
    } else if (V÷ÖxB‡ªêt.args[0] === "antilink") {
      if (
        V÷ÖxB‡ªêt.args[1] === "ON" ||
        V÷ÖxB‡ªêt.args[1] === "on" ||
        V÷ÖxB‡ªêt.args[1] === "On"
      ) {
        return await V÷ÖxB‡ªêt.LinkList.findOne(
          {
            serverID: ŒΩ‚Ñì–∫hat.chat,
          },
          async (error, server) => {
            if (error) {
              return V÷ÖxB‡ªêt.reply(`*üïäÔ∏èYou:* ${
                V÷ÖxB‡ªêt.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"
              }\n*üì¢ID:* ${ŒΩ‚Ñì–∫hat.chat}

*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
            }

            if (!server) {
              let newServer = new V÷ÖxB‡ªêt.LinkList({
                serverID: ŒΩ‚Ñì–∫hat.chat,
                value: "ON",
              });
              await newServer.save();
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `> *üîóAntilink:* _‚úÖHas been turned ON_`,
                ùïØùñéùñòùñïùñëùñÜùñû
              );
            } else {
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `> *üîóAntilink:* _‚úÖWas already turned ON_`,
                ùïØùñéùñòùñïùñëùñÜùñû
              );
            }
          }
        );
      } else if (
        V÷ÖxB‡ªêt.args[1] === "OFF" ||
        V÷ÖxB‡ªêt.args[1] === "off" ||
        V÷ÖxB‡ªêt.args[1] === "Off"
      ) {
        return await V÷ÖxB‡ªêt.LinkList.findOne(
          {
            serverID: ŒΩ‚Ñì–∫hat.chat,
          },
          async (error, server) => {
            if (error) {
              return V÷ÖxB‡ªêt.reply(`*üïäÔ∏èYou:* ${
                V÷ÖxB‡ªêt.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"
              }\n*üì¢ID:* ${ŒΩ‚Ñì–∫hat.chat}

*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
            }

            if (!server) {
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `> *üîóAntilink:* _‚ùåHas been turned OFF_`,
                ùïØùñéùñòùñïùñëùñÜùñû
              );
            } else {
              await server.delete();
              return await V÷ÖxB‡ªêt.imgB(
                V÷ÖxB‡ªêt,
                ŒΩ‚Ñì–∫hat,
                `> *üîóAntilink:* _‚ùåwas not turned OFF_`,
                ùïØùñéùñòùñïùñëùñÜùñû
              );
            }
          }
        );
      } else {
        await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
          react: {
            text: "‚ùå",
            key: ŒΩ‚Ñì–∫hat.key,
          },
        });
        return ŒΩ‚Ñì–∫hat.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Argument Missing!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} close/open
> _${V÷ÖxB‡ªêt.prefix}${pfname} antilink on/off`
        );
      }
    } else {
      await V÷ÖxB‡ªêt.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
        react: {
          text: "‚ùå",
          key: ŒΩ‚Ñì–∫hat.key,
        },
      });
      return ŒΩ‚Ñì–∫hat.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Argument Missing!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} close/open
> _${V÷ÖxB‡ªêt.prefix}${pfname} antilink on/off`
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ŒΩ‚Ñì–∫hat);
  }
};
