//  ‚ïî‚ßâ‡ºª [ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïë We won't be responsible for any kind of ban due to this bot.
//  ‚ïë VoxBot was made for fun purpose and to make group management easier.
//  ‚ïë It's your concern if you spam and gets your account banned.
//  ‚ïë Also, Forks won't be entertained.
//  ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
//  ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
//  ‚ïë In short, Fork At Your Own Risk.
//  ‚ïë
//  ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ V÷ÖxB‡ªêt –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (
  V÷ÖxB‡ªêt,
  ·¥†·¥èx·¥Ñ,
  gmeta,
  isAdmin,
  groupName,
  isBotAdmin,
  groupAdmins,
  participants
) => {
  try {
    if (!·¥†·¥èx·¥Ñ.isGroup) {
      await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _It's a group command!_`
      );
    }
    if (!isAdmin) {
      await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _This is an Admin only Command!_`
      );
    }
    if (!isBotAdmin) {
      await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Bot not Admin!_`
      );
    }

    if (V÷ÖxB‡ªêt.args[0] && V÷ÖxB‡ªêt.args[0].startsWith("@")) {
      let mention = V÷ÖxB‡ªêt.mentionByTag;
      let users = (await mention[0]) || ·¥†·¥èx·¥Ñ.msg.contextInfo.participant;
      if (!users) {
        await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
          react: {
            text: "‚ùå",
            key: ·¥†·¥èx·¥Ñ.key,
          },
        });
        return ·¥†·¥èx·¥Ñ.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Couldn't find any userID in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} @tag/reply_`
        );
      }
      try {
        await V÷ÖxB‡ªêt.groupParticipantsUpdate(·¥†·¥èx·¥Ñ.chat, [users], "promote");
      } catch {
        await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
          react: {
            text: "‚ùå",
            key: ·¥†·¥èx·¥Ñ.key,
          },
        });
        return ·¥†·¥èx·¥Ñ.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Check if the person already not an admin!_`
        );
      }
      try {
        ùïØùñéùñòùñïùñëùñÜùñû = await V÷ÖxB‡ªêt.profilePictureUrl(users, "image");
      } catch {
        ùïØùñéùñòùñïùñëùñÜùñû = "./src/V÷ÖxB‡ªêt.jpg";
      }
      await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ·¥†·¥èx·¥Ñ,
        `OOPs!! looks like someone promoted @${users.split("@")[0]}`,
        ùïØùñéùñòùñïùñëùñÜùñû
      );
    } else if (V÷ÖxB‡ªêt.mentionByReply) {
      let users =
        ·¥†·¥èx·¥Ñ.mtype == "extendedTextMessage" &&
        ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo != null
          ? ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo.participant || ""
          : "";
      if (!users) {
        await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
          react: {
            text: "‚ùå",
            key: ·¥†·¥èx·¥Ñ.key,
          },
        });
        return ·¥†·¥èx·¥Ñ.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Couldn't find any userID in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} @tag/reply_`
        );
      }
      try {
        await V÷ÖxB‡ªêt.groupParticipantsUpdate(·¥†·¥èx·¥Ñ.chat, [users], "promote");
      } catch {
        await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
          react: {
            text: "‚ùå",
            key: ·¥†·¥èx·¥Ñ.key,
          },
        });
        return ·¥†·¥èx·¥Ñ.reply(
          `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Check if the person already not an admin!_`
        );
      }
      try {
        ùïØùñéùñòùñïùñëùñÜùñû = await V÷ÖxB‡ªêt.profilePictureUrl(users, "image");
      } catch {
        ùïØùñéùñòùñïùñëùñÜùñû = "./src/V÷ÖxB‡ªêt.jpg";
      }
      await V÷ÖxB‡ªêt.imgB(
        V÷ÖxB‡ªêt,
        ·¥†·¥èx·¥Ñ,
        `OOPs!! looks like someone promoted @${users.split("@")[0]}`,
        ùïØùñéùñòùñïùñëùñÜùñû
      );
    } else {
      await V÷ÖxB‡ªêt.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${V÷ÖxB‡ªêt.pushname || V÷ÖxB‡ªêt.Tname}_

*‚ùåError* 
> _Couldn't find any userID in context!_

*‚ö°Usage* 
> _${V÷ÖxB‡ªêt.prefix}${pfname} @tag/reply_`
      );
    }
  } catch (error) {
    return V÷ÖxB‡ªêt.grab(V÷ÖxB‡ªêt, ·¥†·¥èx·¥Ñ);
  }
};
