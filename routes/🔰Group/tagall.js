//  ‚ïî‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
//  ‚ïë‚ßâ‡ºª ü§ñ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏è ùêåùêÆùê•ùê≠ùê¢ ùêÉùêûùêØùê¢ùêúùêû ü§ñ
//  ‚ïë  ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïëüåü A versatile WhatsApp multi-purpose bot designed for group management and user convenience.
//  ‚ïëüöÄ Simplifies group management tasks and enhances the overall user experience.
//  ‚ïë‚ö†Ô∏è Please note: Engaging in spamming activities may lead to account suspension. Use responsibly!
//  ‚ïëüéâ VoxBot is intended for fun and convenience, but we're not responsible for account bans.
//  ‚ïëüîÄ Forking the repository is allowed, but customized versions or modified plugins are unsupported.
//  ‚ïë‚ö†Ô∏è Exercise caution and take responsibility for any modifications made to the bot.
//  ‚ïëüìû Need assistance or have issues? Contact our developers at +918436686758 and +918250889325.
//  ‚ïëüîÑ We'll continue providing updates and support for the original version of the bot.
//  ‚ïëüëâ Enjoy the features and functionality of VoxBot responsibly! Make the most out of your
//  ‚ïë   WhatsApp group management experience! üéâ
//  ‚ïë
//  ‚ïëüêû DEVELOPERS: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (
  Í™ú·¥èx ô·¥è·¥õ,
  ·¥†·¥èx·¥Ñ,
  gmeta,
  isAdmin,
  groupName,
  isBotAdmin,
  groupAdmins,
  participants
) => {
  try {
    if (!·¥†·¥èx·¥Ñ.isGroup) {
      await Í™ú·¥èx ô·¥è·¥õ.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname || Í™ú·¥èx ô·¥è·¥õ.Tname}_

*‚ùåError*  
> _It's a group command!_`
      );
    }
    if (!isAdmin && !Í™ú·¥èx ô·¥è·¥õ.isSudoWorker) {
      await Í™ú·¥èx ô·¥è·¥õ.sendMessage(·¥†·¥èx·¥Ñ.chat, {
        react: {
          text: "‚ùå",
          key: ·¥†·¥èx·¥Ñ.key,
        },
      });
      return ·¥†·¥èx·¥Ñ.reply(
        `*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname || Í™ú·¥èx ô·¥è·¥õ.Tname}_

*‚ùåError* 
> _This is an Admin only Command!_`
      );
    }

    try {
      ùïØùñéùñòùñïùñëùñÜùñû = await Í™ú·¥èx ô·¥è·¥õ.profilePictureUrl(·¥†·¥èx·¥Ñ.sender, "image");
    } catch {
      ùïØùñéùñòùñïùñëùñÜùñû = "./src/Í™ú·¥èx ô·¥è·¥õ.jpg";
    }
    if (Í™ú·¥èx ô·¥è·¥õ.args) {
      return await Í™ú·¥èx ô·¥è·¥õ.sendMessage(
        ·¥†·¥èx·¥Ñ.chat,
        {
          image: { url: ùïØùñéùñòùñïùñëùñÜùñû },
          caption: `*üì¢ID:* ${·¥†·¥èx·¥Ñ.chat}
·ø® üí´ùêèùê¢ùêßùê†ùêûùêù ùêÅùê≤:  ${Í™ú·¥èx ô·¥è·¥õ.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"}
·ø® üïõùêìùê¢ùê¶ùêû:  ${Í™ú·¥èx ô·¥è·¥õ.moment.tz("Asia/Kolkata").format("DD/MM HH:mm:ss")}
üìåùêåùêûùê¨ùê¨ùêöùê†ùêû: \n${Í™ú·¥èx ô·¥è·¥õ.args.join(" ")}`,
          mentions: await participants.map((a) => a.id),
        },
        { quoted: ·¥†·¥èx·¥Ñ }
      );
    } else {
      return await Í™ú·¥èx ô·¥è·¥õ.sendMessage(
        ·¥†·¥èx·¥Ñ.chat,
        {
          image: { url: ùïØùñéùñòùñïùñëùñÜùñû },
          caption: `*üì¢ID:* ${·¥†·¥èx·¥Ñ.chat}
·ø® üí´ùêèùê¢ùêßùê†ùêûùêù ùêÅùê≤:  ${Í™ú·¥èx ô·¥è·¥õ.pushname || "…¥·¥è_…¥·¥Ä·¥ç·¥á"}
·ø® üïõùêìùê¢ùê¶ùêû:  ${Í™ú·¥èx ô·¥è·¥õ.moment.tz("Asia/Kolkata").format("DD/MM HH:mm:ss")}
üìåùêåùêûùê¨ùê¨ùêöùê†ùêû: \nAttention Everyone`,
          mentions: await participants.map((a) => a.id),
        },
        { quoted: ·¥†·¥èx·¥Ñ }
      );
    }
  } catch (error) {
    return Í™ú·¥èx ô·¥è·¥õ.grab(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ);
  }
};
