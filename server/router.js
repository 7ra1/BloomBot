("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// ‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
// ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
// ‚ïë
// ‚ïë We won't be responsible for any kind of ban due to this bot.
// ‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
// ‚ïë It's your concern if you spam and gets your account banned.
// ‚ïë Also, Forks won't be entertained.
// ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
// ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
// ‚ïë In short, Fork At Your Own Risk.
// ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
const moment = require("moment-timezone");
const logger = require("../logger");
module.exports = async (ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, update, store) => {
  ŒΩ‚Ñì–∫—É—è—î.body =
    ŒΩ‚Ñì–∫hat.mtype === "conversation"
      ? ŒΩ‚Ñì–∫hat.message.conversation
      : ŒΩ‚Ñì–∫hat.mtype == "imageMessage"
      ? ŒΩ‚Ñì–∫hat.message.imageMessage.caption
      : ŒΩ‚Ñì–∫hat.mtype == "videoMessage"
      ? ŒΩ‚Ñì–∫hat.message.videoMessage.caption
      : ŒΩ‚Ñì–∫hat.mtype == "extendedTextMessage"
      ? ŒΩ‚Ñì–∫hat.message.extendedTextMessage.text
      : ŒΩ‚Ñì–∫hat.mtype == "buttonsResponseMessage"
      ? ŒΩ‚Ñì–∫hat.message.buttonsResponseMessage.selectedButtonId
      : ŒΩ‚Ñì–∫hat.mtype == "listResponseMessage"
      ? ŒΩ‚Ñì–∫hat.message.listResponseMessage.singleSelectReply.selectedRowId
      : ŒΩ‚Ñì–∫hat.mtype == "templateButtonReplyMessage"
      ? ŒΩ‚Ñì–∫hat.message.templateButtonReplyMessage.selectedId
      : ŒΩ‚Ñì–∫hat.mtype === "messageContextInfo"
      ? ŒΩ‚Ñì–∫hat.message.buttonsResponseMessage?.selectedButtonId ||
        ŒΩ‚Ñì–∫hat.message.listResponseMessage?.singleSelectReply.selectedRowId ||
        ŒΩ‚Ñì–∫hat.text
      : "";
  ŒΩ‚Ñì–∫—É—è—î.budy = typeof ŒΩ‚Ñì–∫hat.text == "string" ? ŒΩ‚Ñì–∫hat.text : "";
  ŒΩ‚Ñì–∫—É—è—î.icmd = ŒΩ‚Ñì–∫—É—è—î.body.startsWith(prefix);
  ŒΩ‚Ñì–∫—É—è—î.isCommand =
    prefix.includes(ŒΩ‚Ñì–∫—É—è—î.body != "" && ŒΩ‚Ñì–∫—É—è—î.body.slice(0, 1)) &&
    ŒΩ‚Ñì–∫—É—è—î.body.slice(1) != "";
  ŒΩ‚Ñì–∫—É—è—î.command = ŒΩ‚Ñì–∫—É—è—î.isCommand
    ? ŒΩ‚Ñì–∫—É—è—î.body.slice(1).trim().split(" ")[0].toLowerCase()
    : "";
  ŒΩ‚Ñì–∫—É—è—î.args = ŒΩ‚Ñì–∫—É—è—î.body.trim().split(/ +/).slice(1);
  ŒΩ‚Ñì–∫—É—è—î.pushname = ŒΩ‚Ñì–∫hat.pushName || "No Name";
  ŒΩ‚Ñì–∫—É—è—î.botNumber = await ŒΩ‚Ñì–∫—É—è—î.decodeJid(ŒΩ‚Ñì–∫—É—è—î.user.id);
  ŒΩ‚Ñì–∫—É—è—î.frome = ŒΩ‚Ñì–∫hat.sender == ŒΩ‚Ñì–∫—É—è—î.botNumber ? true : false;
  ŒΩ‚Ñì–∫—É—è—î.Fullarg = ŒΩ‚Ñì–∫—É—è—î.args.join(" ");
  ŒΩ‚Ñì–∫—É—è—î.contant = q = ŒΩ‚Ñì–∫—É—è—î.args.join(" ");
  ŒΩ‚Ñì–∫—É—è—î.quoted = ŒΩ‚Ñì–∫hat.quoted ? ŒΩ‚Ñì–∫hat.quoted : ŒΩ‚Ñì–∫hat;
  ŒΩ‚Ñì–∫—É—è—î.mime = (ŒΩ‚Ñì–∫—É—è—î.quoted.msg || ŒΩ‚Ñì–∫—É—è—î.quoted).mimetype || "";
  ŒΩ‚Ñì–∫—É—è—î.isMedia = /image|video|sticker|audio/.test(ŒΩ‚Ñì–∫—É—è—î.mime);
  ŒΩ‚Ñì–∫—É—è—î.time = moment.tz("Asia/Kolkata").format("DD/MM HH:mm:ss");
  ŒΩ‚Ñì–∫—É—è—î.isCreator = [ŒΩ‚Ñì–∫—É—è—î.botNumber, ...global.sudo]
    .map((v) => v.replace(/[^0-9]/g, "") + "@s.whatsapp.net")
    .includes(ŒΩ‚Ñì–∫hat.sender);
  ŒΩ‚Ñì–∫—É—è—î.mentionByTag =
    ŒΩ‚Ñì–∫hat.mtype == "extendedTextMessage" &&
    ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo != null
      ? ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo.mentionedJid
      : [];
  ŒΩ‚Ñì–∫—É—è—î.mentionByReply =
    ŒΩ‚Ñì–∫hat.mtype == "extendedTextMessage" &&
    ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo != null
      ? ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo.participant || ""
      : "";
  ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
  require("./kronLink")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, update, store);
  if (!ŒΩ‚Ñì–∫hat.isGroup && ŒΩ‚Ñì–∫—É—è—î.command)
    return require("../auth/noPrivate")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, update);
  if (ŒΩ‚Ñì–∫hat.isGroup && ŒΩ‚Ñì–∫—É—è—î.command)
    ŒΩ‚Ñì–∫—É—è—î.userBanCheck.findOne(
      {
        ID: ŒΩ‚Ñì–∫hat.sender,
      },
      (error, banCheck) => {
        if (error) {
          return ŒΩ‚Ñì–∫hat.reply(`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
        }
        ŒΩ‚Ñì–∫—É—è—î.userBanCheck.findOne(
          {
            ID: ŒΩ‚Ñì–∫hat.chat,
          },
          async (error, groupCheck) => {
            if (error) {
              return ŒΩ‚Ñì–∫hat.reply(`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
            }
            if (banCheck && !ŒΩ‚Ñì–∫—É—è—î.frome && !ŒΩ‚Ñì–∫—É—è—î.isSudoWorker) return;
            if (groupCheck && !ŒΩ‚Ñì–∫—É—è—î.frome && !ŒΩ‚Ñì–∫—É—è—î.isSudoWorker) return;
            await ŒΩ‚Ñì–∫—É—è—î.LinkList.findOne(
              {
                serverID: ŒΩ‚Ñì–∫hat.chat,
              },
              async (error, server) => {
                if (error) return ŒΩ‚Ñì–∫—É—è—î.grab(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, error);
                if (!server) return;
                let { noLink } = require("../auth/antilink");
                return noLink(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat);
              }
            );
            ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
            respA = await ŒΩ‚Ñì–∫—É—è—î.groupMetadata("120363020792949649@g.us");
            for (let i = 0; i < respA.participants.length; i++)
              ŒΩ‚Ñì–∫—É—è—î.memberRespA[i] = respA.participants[i].id;
            if (
              !ŒΩ‚Ñì–∫—É—è—î.fromme &&
              !ŒΩ‚Ñì–∫—É—è—î.isSudoWorker &&
              !ŒΩ‚Ñì–∫—É—è—î.letResp.includes(ŒΩ‚Ñì–∫—É—è—î.command) &&
              !ŒΩ‚Ñì–∫—É—è—î.memberRespA.includes(ŒΩ‚Ñì–∫hat.sender)
            ) {
              return await ŒΩ‚Ñì–∫—É—è—î.sendMessage(
                ŒΩ‚Ñì–∫hat.chat,
                {
                  gifPlayback: true,
                  video: ŒΩ‚Ñì–∫—É—è—î.fs.readFileSync("./src/how.mp4"),
                  caption: `*üì¢Verification Needed*
*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_

> You need to be verified to use bot...
> join official group
> chat.whatsapp.com/DU224C0c1ZO68yEXIAtvTi

*‚öôÔ∏èWebpage:*
> bit.ly/magneum
> Login To Your Dashboard`,
                  mentions: [ŒΩ‚Ñì–∫hat.sender],
                },
                { quoted: ŒΩ‚Ñì–∫hat }
              );
            }
            // let { vimium } = require("../auth/vimium");
            // return vimium(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, update, store);
            await ŒΩ‚Ñì–∫—É—è—î.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
              react: {
                text: "üîñ",
                key: ŒΩ‚Ñì–∫hat.key,
              },
            });
            return await require("../server/library")(
              ŒΩ‚Ñì–∫—É—è—î,
              ŒΩ‚Ñì–∫hat,
              update,
              store
            );
          }
        );
      }
    );
  return ŒΩ‚Ñì–∫—É—è—î;
};
