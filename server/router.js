//  ‚ïî‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
//  ‚ïë‚ßâ‡ºª ü§ñ ùêïùê®ùê±ùêÅùê®ùê≠üïäÔ∏è ùêåùêÆùê•ùê≠ùê¢ ùêÉùêûùêØùê¢ùêúùêû ü§ñ
//  ‚ïë  ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû - ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß, ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
//  ‚ïë
//  ‚ïëüåü A versatile WhatsApp multi-purpose bot designed for group management and user convenience.
//  ‚ïëüöÄ Simplifies group management tasks and enhances the overall user experience.
//  ‚ïë‚ö†Ô∏è Please note: Engaging in spamming activities may lead to account suspension. Use responsibly!
//  ‚ïëüéâ VoxBot is intended for fun and convenience, but we're not responsible for account bans.
//  ‚ïëüîÄ Forking the repository is allowed, but customized versions or modified plugins are unsupported.
//  ‚ïë‚ö†Ô∏è Exercise caution and take responsibility for any modifications made to the bot.
//  ‚ïëüìû Need assistance or have issues? Contact our developers at +918436686758 and +918250889325.
//  ‚ïëüîÑ We'll continue providing updates and support for the original version of the bot.
//  ‚ïëüëâ Enjoy the features and functionality of VoxBot responsibly! Make the most out of your
//  ‚ïë   WhatsApp group management experience! üéâ
//  ‚ïë
//  ‚ïëüêû DEVELOPERS: +918436686758, +918250889325
//  ‚ïö‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ Í™ú·¥èx ô·¥è·¥õ –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±"
const moment = require("moment-timezone");
module.exports = async (Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, update, store) => {
  Í™ú·¥èx ô·¥è·¥õ.body =
    ·¥†·¥èx·¥Ñ.mtype === "conversation"
      ? ·¥†·¥èx·¥Ñ.message.conversation
      : ·¥†·¥èx·¥Ñ.mtype == "imageMessage"
      ? ·¥†·¥èx·¥Ñ.message.imageMessage.caption
      : ·¥†·¥èx·¥Ñ.mtype == "videoMessage"
      ? ·¥†·¥èx·¥Ñ.message.videoMessage.caption
      : ·¥†·¥èx·¥Ñ.mtype == "extendedTextMessage"
      ? ·¥†·¥èx·¥Ñ.message.extendedTextMessage.text
      : ·¥†·¥èx·¥Ñ.mtype == "buttonsResponseMessage"
      ? ·¥†·¥èx·¥Ñ.message.buttonsResponseMessage.selectedButtonId
      : ·¥†·¥èx·¥Ñ.mtype == "listResponseMessage"
      ? ·¥†·¥èx·¥Ñ.message.listResponseMessage.singleSelectReply.selectedRowId
      : ·¥†·¥èx·¥Ñ.mtype == "templateButtonReplyMessage"
      ? ·¥†·¥èx·¥Ñ.message.templateButtonReplyMessage.selectedId
      : ·¥†·¥èx·¥Ñ.mtype === "messageContextInfo"
      ? ·¥†·¥èx·¥Ñ.message.buttonsResponseMessage?.selectedButtonId ||
        ·¥†·¥èx·¥Ñ.message.listResponseMessage?.singleSelectReply.selectedRowId ||
        ·¥†·¥èx·¥Ñ.text
      : "";
  Í™ú·¥èx ô·¥è·¥õ.budy = typeof ·¥†·¥èx·¥Ñ.text == "string" ? ·¥†·¥èx·¥Ñ.text : "";
  Í™ú·¥èx ô·¥è·¥õ.icmd = Í™ú·¥èx ô·¥è·¥õ.body.startsWith(prefix);
  Í™ú·¥èx ô·¥è·¥õ.isCommand =
    prefix.includes(Í™ú·¥èx ô·¥è·¥õ.body != "" && Í™ú·¥èx ô·¥è·¥õ.body.slice(0, 1)) &&
    Í™ú·¥èx ô·¥è·¥õ.body.slice(1) != "";
  Í™ú·¥èx ô·¥è·¥õ.command = Í™ú·¥èx ô·¥è·¥õ.isCommand
    ? Í™ú·¥èx ô·¥è·¥õ.body.slice(1).trim().split(" ")[0].toLowerCase()
    : "";
  Í™ú·¥èx ô·¥è·¥õ.args = Í™ú·¥èx ô·¥è·¥õ.body.trim().split(/ +/).slice(1);
  Í™ú·¥èx ô·¥è·¥õ.pushname = ·¥†·¥èx·¥Ñ.pushName || "No Name";
  Í™ú·¥èx ô·¥è·¥õ.botNumber = await Í™ú·¥èx ô·¥è·¥õ.decodeJid(Í™ú·¥èx ô·¥è·¥õ.user.id);
  Í™ú·¥èx ô·¥è·¥õ.frome = ·¥†·¥èx·¥Ñ.sender == Í™ú·¥èx ô·¥è·¥õ.botNumber ? true : false;
  Í™ú·¥èx ô·¥è·¥õ.Fullarg = Í™ú·¥èx ô·¥è·¥õ.args.join(" ");
  Í™ú·¥èx ô·¥è·¥õ.contant = q = Í™ú·¥èx ô·¥è·¥õ.args.join(" ");
  Í™ú·¥èx ô·¥è·¥õ.quoted = ·¥†·¥èx·¥Ñ.quoted ? ·¥†·¥èx·¥Ñ.quoted : ·¥†·¥èx·¥Ñ;
  Í™ú·¥èx ô·¥è·¥õ.mime = (Í™ú·¥èx ô·¥è·¥õ.quoted.msg || Í™ú·¥èx ô·¥è·¥õ.quoted).mimetype || "";
  Í™ú·¥èx ô·¥è·¥õ.isMedia = /image|video|sticker|audio/.test(Í™ú·¥èx ô·¥è·¥õ.mime);
  Í™ú·¥èx ô·¥è·¥õ.time = moment.tz("Asia/Kolkata").format("DD/MM HH:mm:ss");
  Í™ú·¥èx ô·¥è·¥õ.isCreator = [Í™ú·¥èx ô·¥è·¥õ.botNumber, ...global.sudo]
    .map((v) => v.replace(/[^0-9]/g, "") + "@s.whatsapp.net")
    .includes(·¥†·¥èx·¥Ñ.sender);
  Í™ú·¥èx ô·¥è·¥õ.mentionByTag =
    ·¥†·¥èx·¥Ñ.mtype == "extendedTextMessage" &&
    ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo != null
      ? ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo.mentionedJid
      : [];
  Í™ú·¥èx ô·¥è·¥õ.mentionByReply =
    ·¥†·¥èx·¥Ñ.mtype == "extendedTextMessage" &&
    ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo != null
      ? ·¥†·¥èx·¥Ñ.message.extendedTextMessage.contextInfo.participant || ""
      : "";

  require("./kronLink")(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, update, store);
  if (!·¥†·¥èx·¥Ñ.isGroup && Í™ú·¥èx ô·¥è·¥õ.command)
    return require("../auth/noPrivate")(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, update);
  if (·¥†·¥èx·¥Ñ.isGroup && Í™ú·¥èx ô·¥è·¥õ.command)
    Í™ú·¥èx ô·¥è·¥õ.userBanCheck.findOne(
      {
        ID: ·¥†·¥èx·¥Ñ.sender,
      },
      (error, banCheck) => {
        if (error) {
          return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
        }
        Í™ú·¥èx ô·¥è·¥õ.userBanCheck.findOne(
          {
            ID: ·¥†·¥èx·¥Ñ.chat,
          },
          async (error, groupCheck) => {
            if (error) {
              return ·¥†·¥èx·¥Ñ.reply(`*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname}_
*‚ùå Error* 
> There has been an API Error. Please try again later.

*üêû Bug* 
> ${error}`);
            }
            if (banCheck && !Í™ú·¥èx ô·¥è·¥õ.frome && !Í™ú·¥èx ô·¥è·¥õ.isSudoWorker) return;
            if (groupCheck && !Í™ú·¥èx ô·¥è·¥õ.frome && !Í™ú·¥èx ô·¥è·¥õ.isSudoWorker) return;
            await Í™ú·¥èx ô·¥è·¥õ.LinkList.findOne(
              {
                serverID: ·¥†·¥èx·¥Ñ.chat,
              },
              async (error, server) => {
                if (error) return Í™ú·¥èx ô·¥è·¥õ.grab(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ, error);
                if (!server) return;
                let { noLink } = require("../auth/antilink");
                return noLink(Í™ú·¥èx ô·¥è·¥õ, ·¥†·¥èx·¥Ñ);
              }
            );

            // respA = await Í™ú·¥èx ô·¥è·¥õ.groupMetadata("120363020792949649@g.us");
            // for (let i = 0; i < respA.participants.length; i++)
            // Í™ú·¥èx ô·¥è·¥õ.memberRespA[i] = respA.participants[i].id;

            // respB = await Í™ú·¥èx ô·¥è·¥õ.groupMetadata("120363089188116481@g.us");
            // for (let i = 0; i < respB.participants.length; i++)
            // Í™ú·¥èx ô·¥è·¥õ.memberRespB[i] = respB.participants[i].id;
            // if (
            // !Í™ú·¥èx ô·¥è·¥õ.fromme &&
            // !Í™ú·¥èx ô·¥è·¥õ.isSudoWorker &&
            // !Í™ú·¥èx ô·¥è·¥õ.letResp.includes(Í™ú·¥èx ô·¥è·¥õ.command) &&
            // !Í™ú·¥èx ô·¥è·¥õ.memberRespA.includes(·¥†·¥èx·¥Ñ.sender) &&
            // !Í™ú·¥èx ô·¥è·¥õ.memberRespB.includes(·¥†·¥èx·¥Ñ.sender)
            // ) {
            // return await Í™ú·¥èx ô·¥è·¥õ.sendMessage(
            // ·¥†·¥èx·¥Ñ.chat,
            // {
            // gifPlayback: true,
            // video: Í™ú·¥èx ô·¥è·¥õ.fs.readFileSync("./src/how.mp4"),
            // caption: `*üì¢Verification Needed*
            // *üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname}_

            // > You need to be verified to use bot...
            // > join official group
            // > chat.whatsapp.com/DU224C0c1ZO68yEXIAtvTi

            // *‚öôÔ∏èWebpage:*
            // > https://bit.ly/magneum
            // > Login To Your Dashboard`,
            // mentions: [·¥†·¥èx·¥Ñ.sender],
            // },
            // { quoted: ·¥†·¥èx·¥Ñ }
            // );
            // }

            if (process.env.runtype === "devar" && !Í™ú·¥èx ô·¥è·¥õ.isSudoWorker) {
              return await Í™ú·¥èx ô·¥è·¥õ.sendMessage(
                ·¥†·¥èx·¥Ñ.chat,
                {
                  gifPlayback: true,
                  video: Í™ú·¥èx ô·¥è·¥õ.fs.readFileSync("./src/V÷ÖxB‡ªêt_white.jpg"),
                  caption: `*üì¢Verification Needed*
*üò•Sorry:* _${Í™ú·¥èx ô·¥è·¥õ.pushname}_

> bot is now under development mode
> come back another time

*‚öôÔ∏èWebpage:*
> https://bit.ly/magneum
> Login To Your Dashboard`,
                  mentions: [·¥†·¥èx·¥Ñ.sender],
                },
                { quoted: ·¥†·¥èx·¥Ñ }
              );
            } else
              await Í™ú·¥èx ô·¥è·¥õ.sendMessage(·¥†·¥èx·¥Ñ.chat, {
                react: {
                  text: "üîñ",
                  key: ·¥†·¥èx·¥Ñ.key,
                },
              });
            return await require("../server/library")(
              Í™ú·¥èx ô·¥è·¥õ,
              ·¥†·¥èx·¥Ñ,
              update,
              store
            );
          }
        );
      }
    );
  return Í™ú·¥èx ô·¥è·¥õ;
};
